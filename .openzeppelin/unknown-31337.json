{
  "manifestVersion": "3.2",
  "admin": {
    "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "txHash": "0xc9ea6bd6bd7a825b777eaa50b4c714543e6a92a07ea8b690ba329aa483159826",
    "deployTransaction": {
      "hash": "0xc9ea6bd6bd7a825b777eaa50b4c714543e6a92a07ea8b690ba329aa483159826",
      "type": 2,
      "accessList": [],
      "blockHash": "0xe6ac08a0663a2e14b83b0c78616d5bef728bbfafc5e7c1f00f68f3fe349226be",
      "blockNumber": 2,
      "transactionIndex": 0,
      "confirmations": 1,
      "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
      "gasPrice": {
        "type": "BigNumber",
        "hex": "0x6a50e8e0"
      },
      "maxPriorityFeePerGas": {
        "type": "BigNumber",
        "hex": "0x3b9aca00"
      },
      "maxFeePerGas": {
        "type": "BigNumber",
        "hex": "0x990707c0"
      },
      "gasLimit": {
        "type": "BigNumber",
        "hex": "0x0762b4"
      },
      "to": null,
      "value": {
        "type": "BigNumber",
        "hex": "0x00"
      },
      "nonce": 1,
      "data": "0x608060405234801561001057600080fd5b50600080546001600160a01b031916339081178255604051909182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a350610759806100616000396000f3fe60806040526004361061007b5760003560e01c80639623609d1161004e5780639623609d1461011157806399a88ec414610124578063f2fde38b14610144578063f3b7dead146101645761007b565b8063204e1c7a14610080578063715018a6146100bc5780637eff275e146100d35780638da5cb5b146100f3575b600080fd5b34801561008c57600080fd5b506100a061009b366004610515565b610184565b6040516001600160a01b03909116815260200160405180910390f35b3480156100c857600080fd5b506100d1610215565b005b3480156100df57600080fd5b506100d16100ee366004610554565b610292565b3480156100ff57600080fd5b506000546001600160a01b03166100a0565b6100d161011f36600461058c565b61031c565b34801561013057600080fd5b506100d161013f366004610554565b6103ad565b34801561015057600080fd5b506100d161015f366004610515565b610405565b34801561017057600080fd5b506100a061017f366004610515565b6104ef565b6000806000836001600160a01b03166040516101aa90635c60da1b60e01b815260040190565b600060405180830381855afa9150503d80600081146101e5576040519150601f19603f3d011682016040523d82523d6000602084013e6101ea565b606091505b5091509150816101f957600080fd5b8080602001905181019061020d9190610538565b949350505050565b6000546001600160a01b031633146102485760405162461bcd60e51b815260040161023f906106c0565b60405180910390fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b6000546001600160a01b031633146102bc5760405162461bcd60e51b815260040161023f906106c0565b6040516308f2839760e41b81526001600160a01b038281166004830152831690638f283970906024015b600060405180830381600087803b15801561030057600080fd5b505af1158015610314573d6000803e3d6000fd5b505050505050565b6000546001600160a01b031633146103465760405162461bcd60e51b815260040161023f906106c0565b60405163278f794360e11b81526001600160a01b03841690634f1ef286903490610376908690869060040161065d565b6000604051808303818588803b15801561038f57600080fd5b505af11580156103a3573d6000803e3d6000fd5b5050505050505050565b6000546001600160a01b031633146103d75760405162461bcd60e51b815260040161023f906106c0565b604051631b2ce7f360e11b81526001600160a01b038281166004830152831690633659cfe6906024016102e6565b6000546001600160a01b0316331461042f5760405162461bcd60e51b815260040161023f906106c0565b6001600160a01b0381166104945760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161023f565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6000806000836001600160a01b03166040516101aa906303e1469160e61b815260040190565b600060208284031215610526578081fd5b81356105318161070b565b9392505050565b600060208284031215610549578081fd5b81516105318161070b565b60008060408385031215610566578081fd5b82356105718161070b565b915060208301356105818161070b565b809150509250929050565b6000806000606084860312156105a0578081fd5b83356105ab8161070b565b925060208401356105bb8161070b565b9150604084013567ffffffffffffffff808211156105d7578283fd5b818601915086601f8301126105ea578283fd5b8135818111156105fc576105fc6106f5565b604051601f8201601f19908116603f01168101908382118183101715610624576106246106f5565b8160405282815289602084870101111561063c578586fd5b82602086016020830137856020848301015280955050505050509250925092565b600060018060a01b038416825260206040818401528351806040850152825b818110156106985785810183015185820160600152820161067c565b818111156106a95783606083870101525b50601f01601f191692909201606001949350505050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b634e487b7160e01b600052604160045260246000fd5b6001600160a01b038116811461072057600080fd5b5056fea2646970667358221220d849f96f3086b9f82cdcf665adb8c697ace05638da1c7c16ab2d26293717af6764736f6c63430008020033",
      "r": "0xd45302437710e517efd2aee74aac013d33f54c6955ccd76bb0e5540de0e15aa9",
      "s": "0x739f52be29741c932b9672ab28c84d2fcba63a7cc7c839330ec209f504ee8efb",
      "v": 0,
      "creates": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
      "chainId": 31337
    }
  },
  "proxies": [
    {
      "address": "0x9fE46736679d2D9a65F0992F2272dE9f3c7fa6e0",
      "txHash": "0xa8e63e55bb066f4b049e12d1ae3b6f28ba9aa6003179a24d52d5b49eb8e1d57f",
      "kind": "transparent"
    },
    {
      "address": "0xDc64a140Aa3E981100a9becA4E685f962f0cF6C9",
      "txHash": "0xdfde962c3983ff64ef4870c2e1eb985287175bfd3a6413870c62ff71f6b215d6",
      "kind": "transparent"
    },
    {
      "address": "0x0165878A594ca255338adfa4d48449f69242Eb8F",
      "txHash": "0x46390cad3ef000fab1bfbbb53082c7bdcf9950d0468ec50e819009c64261cf0a",
      "kind": "transparent"
    },
    {
      "address": "0x2279B7A0a67DB372996a5FaB50D91eAA73d2eBe6",
      "txHash": "0xbd29e96407e74d9611f5049607987136e2bb426e220a227639e672aaf1ee72aa",
      "kind": "transparent"
    },
    {
      "address": "0x9A676e781A523b5d0C0e43731313A708CB607508",
      "txHash": "0xdd8af074399f461c377df141d61f16c86a6cdd40f41e61e7e8b4b96a69c03e35",
      "kind": "transparent"
    },
    {
      "address": "0x59b670e9fA9D0A427751Af201D676719a970857b",
      "txHash": "0x9ab78ea848ed0b6f7fa74de3ab044b904f772cbbdf0e392b7eae545771212801",
      "kind": "transparent"
    },
    {
      "address": "0x4ed7c70F96B99c776995fB64377f0d4aB3B0e1C1",
      "txHash": "0x1b9bd77a364763890762619b5565fd5d660092774aa839ace61e8f90eaa0054b",
      "kind": "transparent"
    },
    {
      "address": "0x322813Fd9A801c5507c9de605d63CEA4f2CE6c44",
      "txHash": "0x44c8ab6eacee3d95ff0c9e88a5d08eb91976840a660c049b6ca3b51de494f5f8",
      "kind": "transparent"
    },
    {
      "address": "0xa85233C63b9Ee964Add6F2cffe00Fd84eb32338f",
      "txHash": "0x2b5a5df0885b1ca85ab4c0f0d99c8c8b9627e9508053ef1eba55c4e82610e260",
      "kind": "transparent"
    },
    {
      "address": "0x67d269191c92Caf3cD7723F116c85e6E9bf55933",
      "txHash": "0x093488ef91f69224b63f66c3d20e601efe36977577678410d10dc608102e2c62",
      "kind": "transparent"
    },
    {
      "address": "0xf5059a5D33d5853360D16C683c16e67980206f36",
      "txHash": "0x51ae8ad6c9d47d7fb5ec6054c5eb1e9d500126756a55d00f43d2d148ecd530e5",
      "kind": "transparent"
    },
    {
      "address": "0x95401dc811bb5740090279Ba06cfA8fcF6113778",
      "txHash": "0xc1535a6bc32befb47d8a8633be07f6b14612b90e989c24bca294f48117363242",
      "kind": "transparent"
    },
    {
      "address": "0x998abeb3E57409262aE5b751f60747921B33613E",
      "txHash": "0x1ba6a91207dfc6196c61fd5684e829fe6f7c2e8674cecf901dd1ff02c1c12e49",
      "kind": "transparent"
    },
    {
      "address": "0x70e0bA845a1A0F2DA3359C97E0285013525FFC49",
      "txHash": "0xf27e5d0ab46dc496bd194a97533b8804393d86a2556be98ddb2603b3405f2360",
      "kind": "transparent"
    },
    {
      "address": "0x9d4454B023096f34B160D6B654540c56A1F81688",
      "txHash": "0x0411522b869f45bbe293cb8d93d5259e1ea75882e420739d536e796f86862d59",
      "kind": "transparent"
    },
    {
      "address": "0xFD471836031dc5108809D173A067e8486B9047A3",
      "txHash": "0x3972189bb9a765fb9b734618c2ac2b2eec14704965c8a8c0517e72d8e7927b91",
      "kind": "transparent"
    },
    {
      "address": "0x1429859428C0aBc9C2C47C8Ee9FBaf82cFA0F20f",
      "txHash": "0x1162427396adcfccb1b91b1eff6bfdfd52790edb25b325c7434678fa66307a47",
      "kind": "transparent"
    },
    {
      "address": "0xB0D4afd8879eD9F52b28595d31B441D079B2Ca07",
      "txHash": "0x77f5042cace4284e1a0c6f1f19864fb143f9ce39865f4df749e88b9c66bdaaa4",
      "kind": "transparent"
    },
    {
      "address": "0x2E2Ed0Cfd3AD2f1d34481277b3204d807Ca2F8c2",
      "txHash": "0x5d8436c0da16fe52e8942aee0b618d01866e66d3c5e4b2628fbcf66e29c8a502",
      "kind": "transparent"
    },
    {
      "address": "0x172076E0166D1F9Cc711C77Adf8488051744980C",
      "txHash": "0xa36b9ed5cec6821417a1a39cadcdd0e4839db18de9c8ec3e313e1c5fe2d6b087",
      "kind": "transparent"
    },
    {
      "address": "0x7A9Ec1d04904907De0ED7b6839CcdD59c3716AC9",
      "txHash": "0x8cf045fce5c358e152c188773e4eda2bfe3d803f89726137b5bd0a4d99a418e8",
      "kind": "transparent"
    },
    {
      "address": "0x5067457698Fd6Fa1C6964e416b3f42713513B3dD",
      "txHash": "0x9428e3a1c7b11c6afdd739088e37e6565406e951cf62db07645b49ae895ff21f",
      "kind": "transparent"
    },
    {
      "address": "0x07882Ae1ecB7429a84f1D53048d35c4bB2056877",
      "txHash": "0x0bc536806a6f626a9dfcdc38c881782f52288fcb1da9546e8e026746a5fa2eed",
      "kind": "transparent"
    },
    {
      "address": "0xB82008565FdC7e44609fA118A4a681E92581e680",
      "txHash": "0x1b38711e85b38a29554683fb0ed967e4f7f9f6a25a61402a43ae20758982db9f",
      "kind": "transparent"
    },
    {
      "address": "0xb9bEECD1A582768711dE1EE7B0A1d582D9d72a6C",
      "txHash": "0x7d7abe83a165da235027125d9e6f8cd1b70ab41ac5a3f00648fc0311edde1aef",
      "kind": "transparent"
    },
    {
      "address": "0xCA8c8688914e0F7096c920146cd0Ad85cD7Ae8b9",
      "txHash": "0x8f315ca73867843d11e7f3b0be04f5217dd4a5747c0a8e8479011518077c5451",
      "kind": "transparent"
    },
    {
      "address": "0x40a42Baf86Fc821f972Ad2aC878729063CeEF403",
      "txHash": "0x435d03cb73ef6c34f319d2840170b7472fcb2db18536b3fd9daf6c52e0351d50",
      "kind": "transparent"
    },
    {
      "address": "0xA56F946D6398Dd7d9D4D9B337Cf9E0F68982ca5B",
      "txHash": "0xd002ba6c90cf81e527aaa5464daa371362c8a0264a4f5cffcc83abb84bfc9e68",
      "kind": "transparent"
    },
    {
      "address": "0xaC47e91215fb80462139756f43438402998E4A3a",
      "txHash": "0xc972847b6ea468cadc9f8286dd66967dc0b227101f7f261747292b2dfdd049cd",
      "kind": "transparent"
    },
    {
      "address": "0x56fC17a65ccFEC6B7ad0aDe9BD9416CB365B9BE8",
      "txHash": "0x58299fdc2953543f69d0795803a705331aedc84b9050f7b308258ecd70078b6b",
      "kind": "transparent"
    },
    {
      "address": "0x8B190573374637f144AC8D37375d97fd84cBD3a0",
      "txHash": "0x76df6ed07bbaecd4621f4d4dbb7791ef6d4d653345199f0f44b2e1f749784048",
      "kind": "transparent"
    },
    {
      "address": "0xC1e0A9DB9eA830c52603798481045688c8AE99C2",
      "txHash": "0x1e33b13491fe421a959b925198632a181a777b543073cfd1d30db218b61389fa",
      "kind": "transparent"
    },
    {
      "address": "0x0Dd99d9f56A14E9D53b2DdC62D9f0bAbe806647A",
      "txHash": "0xe408f3c5ba789efe5b5332ec14ef541dfdcbb0eb0bc30a5b1dc53381f07d26e8",
      "kind": "transparent"
    },
    {
      "address": "0xCd7c00Ac6dc51e8dCc773971Ac9221cC582F3b1b",
      "txHash": "0x8f9ec528f2d14ce6759f6a897ef6e7a7ae3f147263bc474f8ce40650fe9dee40",
      "kind": "transparent"
    },
    {
      "address": "0x9338CA7d556248055f5751d85cDA7aD6eF254433",
      "txHash": "0xa4e226d2f9b0053e8f1d533d678801b6151a4a617ba8050326a57d410b0486a9",
      "kind": "transparent"
    },
    {
      "address": "0x8E45C0936fa1a65bDaD3222bEFeC6a03C83372cE",
      "txHash": "0xe62c0502e1caccd7b18c55ec601824a0bf0b55ce5b14b0917df5e221173904a8",
      "kind": "transparent"
    },
    {
      "address": "0xFD6D23eE2b6b136E34572fc80cbCd33E9787705e",
      "txHash": "0x90c20b05c33e13f76095d48612a6e74c22a960c9a06de561c3ef4b5de8b4e65b",
      "kind": "transparent"
    },
    {
      "address": "0xF66CfDf074D2FFD6A4037be3A669Ed04380Aef2B",
      "txHash": "0x61ae8688f35c804a42ff7b6791155ebca1cba0935fa73df663bf4e8711776948",
      "kind": "transparent"
    },
    {
      "address": "0x20d7B364E8Ed1F4260b5B90C41c2deC3C1F6D367",
      "txHash": "0x1e2104a5c75e971175022df9e3e5b4b7952536f65777f79d0dda12b3d84eaea1",
      "kind": "transparent"
    },
    {
      "address": "0xccA9728291bC98ff4F97EF57Be3466227b0eb06C",
      "txHash": "0x0848daf4dbf250ffcf737c9a209f5c73195b200fa25a630f34889283d4ae0139",
      "kind": "transparent"
    },
    {
      "address": "0x124dDf9BdD2DdaD012ef1D5bBd77c00F05C610DA",
      "txHash": "0xfc8ffa62f107ee283707c37c6e4955d4d458cc8813d16de137cb9814d371e163",
      "kind": "transparent"
    },
    {
      "address": "0x0F527785e39B22911946feDf580d87a4E00465f0",
      "txHash": "0x750b75edcc2c4bee05bd54b6f6e094cedc1bc6d50560c4eda293a60fe3054cc2",
      "kind": "transparent"
    },
    {
      "address": "0xF6a8aD553b265405526030c2102fda2bDcdDC177",
      "txHash": "0x72c8c1d882909f3e7f25be121e260296e1e380fbc0fba7949cbecba269172d0a",
      "kind": "transparent"
    },
    {
      "address": "0x15Ff10fCc8A1a50bFbE07847A22664801eA79E0f",
      "txHash": "0x9c3e7e4d562a1da9da7bb1e16e44ccad742f5e79f50473d8abd9b34ef67cde6f",
      "kind": "transparent"
    },
    {
      "address": "0xF5b81Fe0B6F378f9E6A3fb6A6cD1921FCeA11799",
      "txHash": "0x491622a65d8144ddc8dbbb7b4eefdf4a5727cde54776b6dff4350502d622ea86",
      "kind": "transparent"
    },
    {
      "address": "0xD2D5e508C82EFc205cAFA4Ad969a4395Babce026",
      "txHash": "0x46ecc3f6f8eaa5493b766d77e044eaf85fd6aeb5987a8e7173c7252bea628720",
      "kind": "transparent"
    },
    {
      "address": "0x532802f2F9E0e3EE9d5Ba70C35E1F43C0498772D",
      "txHash": "0x55e9d1d84fa1507417e7c24f03b67e2c62859c8be1a85fa227e785b10858a3a6",
      "kind": "transparent"
    },
    {
      "address": "0x6e0a5725dD4071e46356bD974E13F35DbF9ef367",
      "txHash": "0x53ca5e3e5558916339a89152fe126fd9751812de5bf9a477d536e213ba6484e9",
      "kind": "transparent"
    },
    {
      "address": "0xF45B1CdbA9AACE2e9bbE80bf376CE816bb7E73FB",
      "txHash": "0x57dc67d1e23aa4717e156139de5daaa943927fac5a31910da6d365623f1748b1",
      "kind": "transparent"
    },
    {
      "address": "0x7036124464A2d2447516309169322c8498ac51e3",
      "txHash": "0x3e6c9bc1122be0e65f9d612f93289dfc7e778995d3b90bd616183b0354f51aaa",
      "kind": "transparent"
    },
    {
      "address": "0xB1c05b498Cb58568B2470369FEB98B00702063dA",
      "txHash": "0xb871b48f8fb7dedf19299da49058cca57831097f656b5eb3659b9a63b9d5eebf",
      "kind": "transparent"
    },
    {
      "address": "0x44863F234b137A395e5c98359d16057A9A1fAc55",
      "txHash": "0x88a55508d907ff49fea04b80a3b1ce7333d5ca523c5d781d7336b2012e2b5cdd",
      "kind": "transparent"
    },
    {
      "address": "0x5E5713a0d915701F464DEbb66015adD62B2e6AE9",
      "txHash": "0x93ea0805db68b0c8151ddd11d70093da07b463dce27b56dd74150d36a335cd29",
      "kind": "transparent"
    },
    {
      "address": "0x9D3DA37d36BB0B825CD319ed129c2872b893f538",
      "txHash": "0xf4152116e1fbdbbda373e8ab908284d97efa34fe7800f522b0f976a171030253",
      "kind": "transparent"
    },
    {
      "address": "0x2498e8059929e18e2a2cED4e32ef145fa2F4a744",
      "txHash": "0x3db679f21e75b94c1cfc3723bdaa6be96274fd6ef9abc2cd7ced0cfa88b92998",
      "kind": "transparent"
    },
    {
      "address": "0xE2b5bDE7e80f89975f7229d78aD9259b2723d11F",
      "txHash": "0x79d231956b767263cd581b835d15944e1a580d045217a95d428c1c383e3b5909",
      "kind": "transparent"
    },
    {
      "address": "0xD5bFeBDce5c91413E41cc7B24C8402c59A344f7c",
      "txHash": "0xefc27a8f0c8317166f7aba4511d465fac45c3d22564320addf1e463c3bff54d7",
      "kind": "transparent"
    },
    {
      "address": "0xa85EffB2658CFd81e0B1AaD4f2364CdBCd89F3a1",
      "txHash": "0x508997bb735e6725bbff570b0e6246cac1a45b0e20c52f75564567807047985b",
      "kind": "transparent"
    },
    {
      "address": "0xde79380FBd39e08150adAA5C6c9dE3146f53029e",
      "txHash": "0x4ec116eca1eb9c83bda492a58aef53c1ea6b9135b58541832cc0b9f3ae872117",
      "kind": "transparent"
    },
    {
      "address": "0x837a41023CF81234f89F956C94D676918b4791c1",
      "txHash": "0xdf50cc4c024a0269be7f2876ee7c404737ec9929ea95f13164a305ef750a93d9",
      "kind": "transparent"
    },
    {
      "address": "0x9CC8B5379C40E24F374cd55973c138fff83ed214",
      "txHash": "0x05e6853b418d2e92ef77ea188b367f78feb3fe5b02bec185e54d4551af493b63",
      "kind": "transparent"
    },
    {
      "address": "0x721d8077771Ebf9B931733986d619aceea412a1C",
      "txHash": "0x87f3dc6552fa0eaf7ac864ee1533df1ee787e70eae6623f01743ee54914ec5aa",
      "kind": "transparent"
    },
    {
      "address": "0x969E3128DB078b179E9F3b3679710d2443cCDB72",
      "txHash": "0x1453c1eddb2ad5a88bd95a22e956abddf4ae6e041c88186ae6aa931d732f4004",
      "kind": "transparent"
    },
    {
      "address": "0x72662E4da74278430123cE51405c1e7A1B87C294",
      "txHash": "0x6b999eec2868544b324c0cdcc4bae5e0ab5166e5ac53a40b49ef404d43e692dd",
      "kind": "transparent"
    },
    {
      "address": "0x9eb52339B52e71B1EFD5537947e75D23b3a7719B",
      "txHash": "0x96b17268041c2626085ab2e03d30f31e5f8489d09a150cd3fe6cdd2bf045f7fc",
      "kind": "transparent"
    },
    {
      "address": "0xf18774574148852771c2631d7d06E2A6c8b44fCA",
      "txHash": "0xc2342fae83baac7daed5ba664721e88ccf8e677e646acbaf1ded492736d9730e",
      "kind": "transparent"
    },
    {
      "address": "0x4432a6DcfAEAB227673B43C30c6fEf40eaBD5D30",
      "txHash": "0x786008d53ecff180947930035de22a58be1d161cbf57147f93785eb3346696f8",
      "kind": "transparent"
    },
    {
      "address": "0x7c02b58029beeA7c1FcC872803dC9818f57A0E61",
      "txHash": "0x92c498852bb4c124ef271781257d6c9d599483a3f7b8163a6714f890f6e25cc6",
      "kind": "transparent"
    },
    {
      "address": "0x575D3d18666B28680255a202fB5d482D1949bB32",
      "txHash": "0x8bdcbf201469fb74360f88885176984a76d4831cf66c2baed9b5b8aab59760c7",
      "kind": "transparent"
    },
    {
      "address": "0x9852795dbb01913439f534b4984fBf74aC8AfA12",
      "txHash": "0xb0c457598210385a43125480f79d68a6758d5aed4f8bbbe88b069482882e0c28",
      "kind": "transparent"
    },
    {
      "address": "0xAE246E208ea35B3F23dE72b697D47044FC594D5F",
      "txHash": "0x714599fa1ebbd1924cdd1610d23afe8cdc509c3bbe734d50b81acd302b9280c4",
      "kind": "transparent"
    },
    {
      "address": "0x02e8910B3B89690d4aeC9fcC0Ae2cD16fB6A4828",
      "txHash": "0xb73589e9ecec4b04af45121babfc2df1ab2b12dd4412e4a7625a7de3f01a091e",
      "kind": "transparent"
    }
  ],
  "impls": {
    "762ec015590d2a60d9aff14d0e37b91a97e6db6c300aba27a3b5ef4bff5f9c35": {
      "address": "0x5FbDB2315678afecb367f032d93F642f64180aa3",
      "txHash": "0xe563658bb83ab8baca4fb2e7071b6b9ee27be181c5bcdbe1b2c9d02bb4a37867",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:54"
          },
          {
            "contract": "ContentSubsystemBase",
            "label": "contentParent",
            "type": "t_address",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\ContentSubsystemBase.sol:15"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_NAME",
            "type": "t_bytes32",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:30"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "_HASHED_VERSION",
            "type": "t_bytes32",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:31"
          },
          {
            "contract": "EIP712Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\cryptography\\draft-EIP712Upgradeable.sol:118"
          },
          {
            "contract": "AccessControlManager",
            "label": "userMintNonce",
            "type": "t_mapping(t_address,t_uint256)",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\AccessControlManager.sol:29"
          },
          {
            "contract": "AccessControlManager",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\AccessControlManager.sol:101"
          }
        ],
        "types": {
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          }
        }
      }
    },
    "41a7b81ba0512c0dd5aa17c1c22637ace0de06c13eaa9796433cdbf942690204": {
      "address": "0xCf7Ed3AccA5a467e9e704C703E8D87F634fB0Fc9",
      "txHash": "0xe17dd37f592133533c90d997cc31dd68cbdc6d73e7ceeb336b612936375f89e5",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)179_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:54"
          },
          {
            "contract": "ContentSubsystemBase",
            "label": "contentParent",
            "type": "t_address",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\ContentSubsystemBase.sol:15"
          },
          {
            "contract": "HasRoyalty",
            "label": "contractRoyalty",
            "type": "t_struct(Fee)8121_storage",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\HasRoyalty.sol:13"
          },
          {
            "contract": "HasRoyalty",
            "label": "tokenRoyalty",
            "type": "t_mapping(t_uint256,t_struct(Fee)8121_storage)",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\HasRoyalty.sol:16"
          },
          {
            "contract": "HasRoyalty",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\HasRoyalty.sol:75"
          },
          {
            "contract": "HasContractUri",
            "label": "contractUri",
            "type": "t_string_storage",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\HasContractUri.sol:17"
          },
          {
            "contract": "HasContractUri",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\HasContractUri.sol:39"
          },
          {
            "contract": "HasTokenUri",
            "label": "publicUris",
            "type": "t_mapping(t_uint256,t_struct(Asset)8029_storage)",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\HasTokenUri.sol:15"
          },
          {
            "contract": "HasTokenUri",
            "label": "hiddenUris",
            "type": "t_mapping(t_uint256,t_struct(Asset)8029_storage)",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\HasTokenUri.sol:16"
          },
          {
            "contract": "HasTokenUri",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\HasTokenUri.sol:97"
          },
          {
            "contract": "ContentStorage",
            "label": "maxSupply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\ContentStorage.sol:22"
          },
          {
            "contract": "ContentStorage",
            "label": "supply",
            "type": "t_mapping(t_uint256,t_uint256)",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\ContentStorage.sol:23"
          },
          {
            "contract": "ContentStorage",
            "label": "assetCounter",
            "type": "t_uint256",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\ContentStorage.sol:24"
          },
          {
            "contract": "ContentStorage",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\ContentStorage.sol:192"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_uint256)": {
            "label": "mapping(uint256 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_uint256,t_struct(Asset)8029_storage)": {
            "label": "mapping(uint256 => struct LibAsset.Asset)"
          },
          "t_struct(Asset)8029_storage": {
            "label": "struct LibAsset.Asset",
            "members": [
              {
                "label": "dataUri",
                "type": "t_array(t_string_storage)dyn_storage"
              },
              {
                "label": "version",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_string_storage)dyn_storage": {
            "label": "string[]"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_struct(Fee)8121_storage": {
            "label": "struct LibRoyalty.Fee",
            "members": [
              {
                "label": "receiver",
                "type": "t_address"
              },
              {
                "label": "rate",
                "type": "t_uint24"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_mapping(t_uint256,t_struct(Fee)8121_storage)": {
            "label": "mapping(uint256 => struct LibRoyalty.Fee)"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)179_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)179_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "a68a9c00641d8a22b429ba71663f4dafcce8cd20cab693ec93940ccc1d29a70d": {
      "address": "0x5FC8d32690cc91D4c39d9d3abcBD16989F875707",
      "txHash": "0xa9473431dd969ef8f67980a5059ae2bf796daf6dcdec5430171e31fd256df7f4",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:475"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:54"
          },
          {
            "contract": "Content",
            "label": "contentStorage",
            "type": "t_contract(IContentStorage)7956",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\Content.sol:23"
          },
          {
            "contract": "Content",
            "label": "accessControlManager",
            "type": "t_contract(IAccessControlManager)7681",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\Content.sol:24"
          },
          {
            "contract": "Content",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\Content.sol:193"
          }
        ],
        "types": {
          "t_contract(IContentStorage)7956": {
            "label": "contract IContentStorage"
          },
          "t_contract(IAccessControlManager)7681": {
            "label": "contract IAccessControlManager"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_address": {
            "label": "address"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    },
    "c7924023607fbeced029cad158663642413fe7d0f179ff87f980ad6fc7547743": {
      "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
      "txHash": "0x6ffa90249cda0ff31a35cf21b1a9cb45df83787d4a80074d0244d383c6bdff26",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:54"
          },
          {
            "contract": "CraftBase",
            "label": "seed",
            "type": "t_uint256",
            "src": "contracts\\craft\\CraftBase.sol:24"
          },
          {
            "contract": "CraftBase",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\craft\\CraftBase.sol:56"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_address": {
            "label": "address"
          }
        }
      }
    },
    "100d1387f4a18bdedabfe07439ab48e35b2d15947049d96bafc50ea0d6919cef": {
      "address": "0x0DCd1Bf9A1b36cE34237eEaFef220932846BCD82",
      "txHash": "0x1d3184f3db2c51e7b9cf39c3f234adb33dc4d5bd37f83eb83f582d9c93306573",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "_owner",
            "type": "t_address",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:22"
          },
          {
            "contract": "OwnableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\OwnableUpgradeable.sol:87"
          },
          {
            "contract": "ContentFactory",
            "label": "contentImplementation",
            "type": "t_address",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\factory\\ContentFactory.sol:16"
          },
          {
            "contract": "ContentFactory",
            "label": "contentManagerImplementation",
            "type": "t_address",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\factory\\ContentFactory.sol:17"
          },
          {
            "contract": "ContentFactory",
            "label": "contentStorageImplementation",
            "type": "t_address",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\factory\\ContentFactory.sol:18"
          },
          {
            "contract": "ContentFactory",
            "label": "accessControlManagerImplementation",
            "type": "t_address",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\factory\\ContentFactory.sol:19"
          },
          {
            "contract": "ContentFactory",
            "label": "contractVersion",
            "type": "t_uint24",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\factory\\ContentFactory.sol:20"
          },
          {
            "contract": "ContentFactory",
            "label": "contentContracts",
            "type": "t_struct(AddressSet)4782_storage",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\factory\\ContentFactory.sol:22"
          },
          {
            "contract": "ContentFactory",
            "label": "contentManagerContracts",
            "type": "t_struct(AddressSet)4782_storage",
            "src": "@rawrshak\\rawr-content\\contracts\\content\\factory\\ContentFactory.sol:23"
          }
        ],
        "types": {
          "t_address": {
            "label": "address"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_struct(AddressSet)4782_storage": {
            "label": "struct EnumerableSetUpgradeable.AddressSet",
            "members": [
              {
                "label": "_inner",
                "type": "t_struct(Set)4481_storage"
              }
            ]
          },
          "t_struct(Set)4481_storage": {
            "label": "struct EnumerableSetUpgradeable.Set",
            "members": [
              {
                "label": "_values",
                "type": "t_array(t_bytes32)dyn_storage"
              },
              {
                "label": "_indexes",
                "type": "t_mapping(t_bytes32,t_uint256)"
              }
            ]
          },
          "t_array(t_bytes32)dyn_storage": {
            "label": "bytes32[]"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_mapping(t_bytes32,t_uint256)": {
            "label": "mapping(bytes32 => uint256)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_bool": {
            "label": "bool"
          }
        }
      }
    },
    "2a1c47b314b25838db9660b95ff3d25bb894c088820b5c59ae4817c97ff84edd": {
      "address": "0xcbEAF3BDe82155F56486Fb5a1072cb8baAf547cc",
      "txHash": "0xd32f5e85f007e807f98476402907f04c7239fe46915bb007ee99bc3f3e180b3d",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:54"
          },
          {
            "contract": "CraftBase",
            "label": "seed",
            "type": "t_uint256",
            "src": "contracts\\craft\\CraftBase.sol:24"
          },
          {
            "contract": "CraftBase",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\craft\\CraftBase.sol:56"
          },
          {
            "contract": "Craft",
            "label": "recipes",
            "type": "t_mapping(t_uint256,t_struct(Recipe)8208_storage)",
            "src": "contracts\\craft\\Craft.sol:24"
          },
          {
            "contract": "Craft",
            "label": "recipeCounter",
            "type": "t_uint256",
            "src": "contracts\\craft\\Craft.sol:25"
          },
          {
            "contract": "Craft",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\craft\\Craft.sol:159"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(Recipe)8208_storage)": {
            "label": "mapping(uint256 => struct LibCraft.Recipe)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(Recipe)8208_storage": {
            "label": "struct LibCraft.Recipe",
            "members": [
              {
                "label": "craftingRate",
                "type": "t_uint24"
              },
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "materials",
                "type": "t_array(t_struct(AssetData)8168_storage)dyn_storage"
              },
              {
                "label": "materialAmounts",
                "type": "t_array(t_uint256)dyn_storage"
              },
              {
                "label": "rewards",
                "type": "t_array(t_struct(AssetData)8168_storage)dyn_storage"
              },
              {
                "label": "rewardAmounts",
                "type": "t_array(t_uint256)dyn_storage"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_struct(AssetData)8168_storage)dyn_storage": {
            "label": "struct LibCraft.AssetData[]"
          },
          "t_struct(AssetData)8168_storage": {
            "label": "struct LibCraft.AssetData",
            "members": [
              {
                "label": "content",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_uint256)dyn_storage": {
            "label": "uint256[]"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "181471a6ea01810c625ab4f91f0cf104a69205a1f855e263820a1f61b7ef7b39": {
      "address": "0x2a810409872AfC346F9B5b26571Fd6eC42EA4849",
      "txHash": "0x4bb15c62a3fcdea7ceb4ad7a1fd511ba6277be2d9e89c9948e449597cf1e7c3b",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:54"
          },
          {
            "contract": "CraftBase",
            "label": "seed",
            "type": "t_uint256",
            "src": "contracts\\craft\\CraftBase.sol:24"
          },
          {
            "contract": "CraftBase",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\craft\\CraftBase.sol:56"
          },
          {
            "contract": "Salvage",
            "label": "salvageableAssets",
            "type": "t_mapping(t_uint256,t_struct(SalvageableAsset)8189_storage)",
            "src": "contracts\\craft\\Salvage.sol:27"
          },
          {
            "contract": "Salvage",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\craft\\Salvage.sol:180"
          }
        ],
        "types": {
          "t_mapping(t_uint256,t_struct(SalvageableAsset)8189_storage)": {
            "label": "mapping(uint256 => struct LibCraft.SalvageableAsset)"
          },
          "t_uint256": {
            "label": "uint256"
          },
          "t_struct(SalvageableAsset)8189_storage": {
            "label": "struct LibCraft.SalvageableAsset",
            "members": [
              {
                "label": "asset",
                "type": "t_struct(AssetData)8168_storage"
              },
              {
                "label": "salvageType",
                "type": "t_uint256"
              },
              {
                "label": "outputs",
                "type": "t_array(t_struct(SalvageOutput)8176_storage)dyn_storage"
              },
              {
                "label": "lootboxCredits",
                "type": "t_struct(LootboxCreditReward)8375_storage"
              }
            ]
          },
          "t_struct(AssetData)8168_storage": {
            "label": "struct LibCraft.AssetData",
            "members": [
              {
                "label": "content",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              }
            ]
          },
          "t_array(t_struct(SalvageOutput)8176_storage)dyn_storage": {
            "label": "struct LibCraft.SalvageOutput[]"
          },
          "t_struct(SalvageOutput)8176_storage": {
            "label": "struct LibCraft.SalvageOutput",
            "members": [
              {
                "label": "asset",
                "type": "t_struct(AssetData)8168_storage"
              },
              {
                "label": "probability",
                "type": "t_uint24"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_struct(LootboxCreditReward)8375_storage": {
            "label": "struct LibLootbox.LootboxCreditReward",
            "members": [
              {
                "label": "tokenAddress",
                "type": "t_address"
              },
              {
                "label": "probability",
                "type": "t_uint24"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              }
            ]
          },
          "t_address": {
            "label": "address"
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "53480efa745f690322e0e76ff1a2780c037c8b9c7128ce6968ff4305fb6b127d": {
      "address": "0xFC4EE541377F3b6641c23CBE82F6f04388290421",
      "txHash": "0xa29e9f131a5eafa2f8c9a8960c6feb502e25e3211e5269f7a2b2f1a617c2d1e9",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:54"
          },
          {
            "contract": "LootboxStorageByItem",
            "label": "tokenId",
            "type": "t_uint256",
            "src": "contracts\\lootbox\\LootboxStorageByItem.sol:21"
          },
          {
            "contract": "LootboxStorageByItem",
            "label": "lootboxBlueprints",
            "type": "t_mapping(t_uint256,t_struct(Blueprint)8394_storage)",
            "src": "contracts\\lootbox\\LootboxStorageByItem.sol:24"
          },
          {
            "contract": "LootboxStorageByItem",
            "label": "lootboxRewards",
            "type": "t_mapping(t_uint256,t_array(t_struct(LootboxReward)8385_storage)dyn_storage)",
            "src": "contracts\\lootbox\\LootboxStorageByItem.sol:27"
          },
          {
            "contract": "LootboxStorageByItem",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\lootbox\\LootboxStorageByItem.sol:131"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_mapping(t_uint256,t_struct(Blueprint)8394_storage)": {
            "label": "mapping(uint256 => struct LibLootbox.Blueprint)"
          },
          "t_struct(Blueprint)8394_storage": {
            "label": "struct LibLootbox.Blueprint",
            "members": [
              {
                "label": "enabled",
                "type": "t_bool"
              },
              {
                "label": "cost",
                "type": "t_uint256"
              },
              {
                "label": "maxAssetsGiven",
                "type": "t_uint16"
              },
              {
                "label": "hasGuaranteedItems",
                "type": "t_bool"
              }
            ]
          },
          "t_bool": {
            "label": "bool"
          },
          "t_uint16": {
            "label": "uint16"
          },
          "t_mapping(t_uint256,t_array(t_struct(LootboxReward)8385_storage)dyn_storage)": {
            "label": "mapping(uint256 => struct LibLootbox.LootboxReward[])"
          },
          "t_array(t_struct(LootboxReward)8385_storage)dyn_storage": {
            "label": "struct LibLootbox.LootboxReward[]"
          },
          "t_struct(LootboxReward)8385_storage": {
            "label": "struct LibLootbox.LootboxReward",
            "members": [
              {
                "label": "asset",
                "type": "t_struct(AssetData)8168_storage"
              },
              {
                "label": "probability",
                "type": "t_uint24"
              },
              {
                "label": "amount",
                "type": "t_uint256"
              },
              {
                "label": "class",
                "type": "t_uint8"
              }
            ]
          },
          "t_struct(AssetData)8168_storage": {
            "label": "struct LibCraft.AssetData",
            "members": [
              {
                "label": "content",
                "type": "t_address"
              },
              {
                "label": "tokenId",
                "type": "t_uint256"
              }
            ]
          },
          "t_uint24": {
            "label": "uint24"
          },
          "t_uint8": {
            "label": "uint8"
          },
          "t_address": {
            "label": "address"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          }
        }
      }
    },
    "38d21764d264495d0983d3c19e9dd000f12155c5a8390f575ccce5005464b1d2": {
      "address": "0xDDa0648FA8c9cD593416EC37089C2a2E6060B45c",
      "txHash": "0x05c75d0cc9afd1210143a6c453fc2b6d46b5380b2d1c1d280e87f458bc2a033e",
      "layout": {
        "storage": [
          {
            "contract": "Initializable",
            "label": "_initialized",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:39"
          },
          {
            "contract": "Initializable",
            "label": "_initializing",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\proxy\\utils\\Initializable.sol:44"
          },
          {
            "contract": "ContextUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\ContextUpgradeable.sol:36"
          },
          {
            "contract": "ERC165Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165Upgradeable.sol:41"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_balances",
            "type": "t_mapping(t_uint256,t_mapping(t_address,t_uint256))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:25"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_operatorApprovals",
            "type": "t_mapping(t_address,t_mapping(t_address,t_bool))",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:28"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "_uri",
            "type": "t_string_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:31"
          },
          {
            "contract": "ERC1155Upgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)47_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\token\\ERC1155\\ERC1155Upgradeable.sol:475"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "_roles",
            "type": "t_mapping(t_bytes32,t_struct(RoleData)34_storage)",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:61"
          },
          {
            "contract": "AccessControlUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\access\\AccessControlUpgradeable.sol:235"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "_supportedInterfaces",
            "type": "t_mapping(t_bytes4,t_bool)",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:24"
          },
          {
            "contract": "ERC165StorageUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\utils\\introspection\\ERC165StorageUpgradeable.sol:54"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "_paused",
            "type": "t_bool",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:29"
          },
          {
            "contract": "PausableUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\PausableUpgradeable.sol:102"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "_status",
            "type": "t_uint256",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:38"
          },
          {
            "contract": "ReentrancyGuardUpgradeable",
            "label": "__gap",
            "type": "t_array(t_uint256)49_storage",
            "src": "@openzeppelin\\contracts-upgradeable\\security\\ReentrancyGuardUpgradeable.sol:74"
          },
          {
            "contract": "LootboxByItem",
            "label": "seed",
            "type": "t_uint256",
            "src": "contracts\\lootbox\\LootboxByItem.sol:28"
          },
          {
            "contract": "LootboxByItem",
            "label": "lootboxCreditAddress",
            "type": "t_address",
            "src": "contracts\\lootbox\\LootboxByItem.sol:31"
          },
          {
            "contract": "LootboxByItem",
            "label": "dataStorage",
            "type": "t_contract(ILootboxStorageByItem)9906",
            "src": "contracts\\lootbox\\LootboxByItem.sol:34"
          },
          {
            "contract": "LootboxByItem",
            "label": "__gap",
            "type": "t_array(t_uint256)50_storage",
            "src": "contracts\\lootbox\\LootboxByItem.sol:146"
          }
        ],
        "types": {
          "t_uint256": {
            "label": "uint256"
          },
          "t_address": {
            "label": "address"
          },
          "t_contract(ILootboxStorageByItem)9906": {
            "label": "contract ILootboxStorageByItem"
          },
          "t_array(t_uint256)50_storage": {
            "label": "uint256[50]"
          },
          "t_array(t_uint256)49_storage": {
            "label": "uint256[49]"
          },
          "t_bool": {
            "label": "bool"
          },
          "t_mapping(t_bytes4,t_bool)": {
            "label": "mapping(bytes4 => bool)"
          },
          "t_bytes4": {
            "label": "bytes4"
          },
          "t_mapping(t_bytes32,t_struct(RoleData)34_storage)": {
            "label": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
          },
          "t_bytes32": {
            "label": "bytes32"
          },
          "t_struct(RoleData)34_storage": {
            "label": "struct AccessControlUpgradeable.RoleData",
            "members": [
              {
                "label": "members",
                "type": "t_mapping(t_address,t_bool)"
              },
              {
                "label": "adminRole",
                "type": "t_bytes32"
              }
            ]
          },
          "t_mapping(t_address,t_bool)": {
            "label": "mapping(address => bool)"
          },
          "t_mapping(t_uint256,t_mapping(t_address,t_uint256))": {
            "label": "mapping(uint256 => mapping(address => uint256))"
          },
          "t_mapping(t_address,t_uint256)": {
            "label": "mapping(address => uint256)"
          },
          "t_mapping(t_address,t_mapping(t_address,t_bool))": {
            "label": "mapping(address => mapping(address => bool))"
          },
          "t_string_storage": {
            "label": "string"
          },
          "t_array(t_uint256)47_storage": {
            "label": "uint256[47]"
          }
        }
      }
    }
  }
}
